version: 1
backend:
  phases:
    build:
      commands:
        - npm ci --cache .npm --prefer-offline  # Correct: Using npm ci for consistent installs, and good caching strategies.
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID # Correct:  Using ampx for Gen 2 deployments.  This is the core command.
        - |
          # Get the table name from the outputs and run the questions script
          export AMPLIFY_DYNAMODB_TABLE=$(npx ampx outputs get --key PTEQuestionTable.tableName) # Correct:  Uses `ampx outputs` to get infrastructure details.  This is the *right* way to do this in Gen 2.
          node add_questions.js  # Correct:  Runs your custom script, likely to populate data.  Makes sure to use the exported environment variable.

frontend:
  phases:
    preBuild:
      commands:
        - npm ci --cache .npm --prefer-offline # Correct:  Consistent installs and caching.
    build:
      commands:
        - npm run build # Correct:  Standard build command.
  artifacts:
    baseDirectory: .next  # Correct:  Specifies the output directory for a Next.js app.
    files:
      - '**/*'          # Correct:  Includes all files within the base directory.
  cache:
    paths:
      - node_modules/**/* # Correct: Caches node_modules for faster builds.
      - .npm/**/*       # Correct: Caches the npm cache itself, further improving speed.
